name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: ${{secrets.GKE_CLUSTER_NAME}}
  GKE_ZONE: ${{secrets.GKE_ZONE}}
  DEPLOYMENT_NAME: domgame-deployment
  IMAGE: domgame-image
  TAG: 1.0.0

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run Unit Tests
        run: |-
          npm install
          npm run test:unit

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker
      
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      
      - name: Build Docker Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .
      
      - name: Publish Docker Image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
      
      - name: Set Up Kustomize
        run: |-
          curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
          chmod u+x ./kustomize
      
      - name: Deploy Image to GKE Cluster
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide



